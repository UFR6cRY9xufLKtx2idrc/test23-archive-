# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: [ master, development, '**-RC' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        node-version: [20.x]
        runtime:
          - win-x64
        include:
        - runtime: win-x64
          os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: "yarn"
    - run: yarn run ci
    - run: yarn run lint
    - name: Get Version Number
      id: getPackageInfo
      uses: jaywcjlove/github-action-package@main

    - name: Set Version Number Variable
      id: versionNumber
      uses: actions/github-script@v7
      env:
        IS_DEV: ${{ contains(github.ref, 'development') }}
        IS_RC: ${{ contains(github.ref, 'RC') }}
        VERSION_NUMBER_NIGHTLY: ${{ steps.getPackageInfo.outputs.version }}-nightly-${{ github.run_number }}
        VERSION_NUMBER_RC: ${{ steps.getPackageInfo.outputs.version }}-RC-${{ github.run_number }}
        VERSION_NUMBER: ${{ steps.getPackageInfo.outputs.version }}
      with:
        result-encoding: string
        script: |
          if (${{ env.IS_DEV }}) {
            return "${{ env.VERSION_NUMBER_NIGHTLY }}"
          } else if (${{ env.IS_RC }}) {
            return "${{ env.VERSION_NUMBER_RC }}"
          } else {
            return "${{env.VERSION_NUMBER }}"
          }
        # script: if ${{ env.IS_DEV }} then echo "::set-output name=VERSION_NUMBER::${{ env.VERSION_NUMBER_NIGHTLY }}" else echo "::set-output name=VERSION_NUMBER::${{ env.VERSION_NUMBER }}" fi

    - name: Update package.json version
      uses: jaywcjlove/github-action-package@main
      with:
        version: ${{ steps.versionNumber.outputs.result }}


    - name: Install libarchive-tools
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt -y install libarchive-tools; echo "Version Number ${{ toJson(job) }} ${{ toJson(needs) }}"

    - name: Build x64 with Node.js ${{ matrix.node-version}}
      if: contains(matrix.runtime, 'x64')
      run: yarn run build

    - name: Upload Windows x64 .exe Artifact
      uses: actions/upload-artifact@v4
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        name: freetube-${{ steps.versionNumber.outputs.result }}-setup-x64.exe
        path: build/freetube Setup ${{ steps.versionNumber.outputs.result }}.exe

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/freetube Setup ${{ steps.versionNumber.outputs.result }}.exe
        asset_name: freetube-${{ steps.versionNumber.outputs.result }}-setup-x64.exe
        tag: ${{ github.ref }}
        overwrite: true

    - name: Upload Windows x64 .zip Artifact
      uses: actions/upload-artifact@v4
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        name: freetube-${{ steps.versionNumber.outputs.result }}-win-x64-portable.zip
        path: build/freetube-${{ steps.versionNumber.outputs.result }}-win.zip

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/freetube-${{ steps.versionNumber.outputs.result }}-win.zip
        asset_name: freetube-${{ steps.versionNumber.outputs.result }}-win-x64-portable.zip
        tag: ${{ github.ref }}
        overwrite: true

    - name: Upload Windows x64 .7z Artifact
      uses: actions/upload-artifact@v4
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        name: freetube-${{ steps.versionNumber.outputs.result }}-win-x64-portable.7z
        path: build/freetube-${{ steps.versionNumber.outputs.result }}-win.7z

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/freetube-${{ steps.versionNumber.outputs.result }}-win.7z
        asset_name: freetube-${{ steps.versionNumber.outputs.result }}-win-x64-portable.7z
        tag: ${{ github.ref }}
        overwrite: true

    - name: Upload Windows x64 Portable Artifact
      uses: actions/upload-artifact@v4
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        name: freetube-${{ steps.versionNumber.outputs.result }}-portable-x64.exe
        path: build/freetube ${{ steps.versionNumber.outputs.result }}.exe

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/freetube ${{ steps.versionNumber.outputs.result }}.exe
        asset_name: freetube-${{ steps.versionNumber.outputs.result }}-portable-x64.exe
        tag: ${{ github.ref }}
        overwrite: true
